From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Chris Adams <chris.adams@jollamobile.com>
Date: Tue, 19 Jun 2018 13:15:36 +1000
Subject: [PATCH] Use p2p dbus for signon-ui flows. Contributes to JB#42126
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Tomi Lepp√§nen <tomi.leppanen@jolla.com>
---
 src/signond/signonidentity.cpp    | 27 ++++++++++++++++++++--
 src/signond/signonidentity.h      |  1 +
 src/signond/signonsessioncore.cpp | 38 +++++++++++++++++++++++++++++--
 src/signond/signonsessioncore.h   |  1 +
 4 files changed, 63 insertions(+), 4 deletions(-)

diff --git a/src/signond/signonidentity.cpp b/src/signond/signonidentity.cpp
index 92ff476..2c7216b 100644
--- a/src/signond/signonidentity.cpp
+++ b/src/signond/signonidentity.cpp
@@ -23,6 +23,10 @@
  * 02110-1301 USA
  */
 
+#ifdef ENABLE_P2P
+#include <QStandardPaths>
+#endif
+
 #include "signonidentity.h"
 
 #include "error.h"
@@ -74,11 +78,12 @@ const QString internalServerErrStr = SIGNOND_INTERNAL_SERVER_ERR_STR;
 SignonIdentity::SignonIdentity(quint32 id, int timeout,
                                SignonDaemon *parent):
     SignonDisposable(timeout, parent),
+    m_id(id),
+    m_p2pc(QStringLiteral("identity.dbus.connection")),
+    m_signonui(NULL),
     m_pInfo(NULL),
     m_destroyed(false)
 {
-    m_id = id;
-
     /*
      * creation of unique name for the given identity
      * */
@@ -87,10 +92,28 @@ SignonIdentity::SignonIdentity(quint32 id, int timeout,
                          + QString::number(incr++, 16);
     setObjectName(objectName);
 
+#ifdef ENABLE_P2P
+    m_p2pc = QDBusConnection::connectToPeer(
+            QStringLiteral("unix:path=%1/signonui/socket")
+                      .arg(QStandardPaths::writableLocation(
+                                QStandardPaths::RuntimeLocation)),
+            objectName);
+    if (!m_p2pc.isConnected()) {
+        BLAME() << "Identity unable to connect to signonui socket:"
+                << m_p2pc.lastError()
+                << m_p2pc.lastError().type()
+                << m_p2pc.lastError().name();
+    }
+    m_signonui = new SignonUiAdaptor(SIGNON_UI_SERVICE,
+                                     SIGNON_UI_DAEMON_OBJECTPATH,
+                                     m_p2pc,
+                                     this);
+#else
     m_signonui = new SignonUiAdaptor(SIGNON_UI_SERVICE,
                                      SIGNON_UI_DAEMON_OBJECTPATH,
                                      QDBusConnection::sessionBus(),
                                      this);
+#endif
 
     /* Watch for credential updates happening outside of this object (this can
      * happen on request of authentication plugins) */
diff --git a/src/signond/signonidentity.h b/src/signond/signonidentity.h
index 417c319..0f5fc78 100644
--- a/src/signond/signonidentity.h
+++ b/src/signond/signonidentity.h
@@ -109,6 +109,7 @@ private:
 
 private:
     quint32 m_id;
+    QDBusConnection m_p2pc;
     SignonUiAdaptor *m_signonui;
     SignonIdentityInfo *m_pInfo;
     bool m_destroyed;
diff --git a/src/signond/signonsessioncore.cpp b/src/signond/signonsessioncore.cpp
index 93a7328..1877ad5 100644
--- a/src/signond/signonsessioncore.cpp
+++ b/src/signond/signonsessioncore.cpp
@@ -35,6 +35,11 @@
 #include "SignOn/authpluginif.h"
 #include "SignOn/signonerror.h"
 
+#ifdef ENABLE_P2P
+#include <QStandardPaths>
+#include <QFileInfo>
+#endif
+
 #define MAX_IDLE_TIME SIGNOND_MAX_IDLE_TIME
 /*
  * the watchdog searches for idle sessions with period of half of idle timeout
@@ -78,6 +83,7 @@ SignonSessionCore::SignonSessionCore(quint32 id,
                                      int timeout,
                                      QObject *parent):
     SignonDisposable(timeout, parent),
+    m_p2pc(QStringLiteral("session.dbus.connection")),
     m_signonui(0),
     m_watcher(0),
     m_requestIsActive(false),
@@ -86,10 +92,28 @@ SignonSessionCore::SignonSessionCore(quint32 id,
     m_method(method),
     m_queryCredsUiDisplayed(false)
 {
+#ifdef ENABLE_P2P
+    QString path = QStringLiteral("unix:path=%1/signonui/socket")
+                      .arg(QStandardPaths::writableLocation(
+                                QStandardPaths::RuntimeLocation));
+    // 10 == strlen("unix:path=")
+    QFileInfo(path.mid(10)).dir().mkpath(QStringLiteral("."));
+    m_p2pc = QDBusConnection::connectToPeer(path,
+            QStringLiteral("signon-session-core-%1").arg(id));
+    if (!m_p2pc.isConnected()) {
+        BLAME() << "Session unable to connect to signonui socket:"
+                << m_p2pc.lastError()
+                << m_p2pc.lastError().type()
+                << m_p2pc.lastError().name();
+    }
+    m_signonui = new SignonUiAdaptor(SIGNON_UI_SERVICE,
+                                     SIGNON_UI_DAEMON_OBJECTPATH,
+                                     m_p2pc);
+#else
     m_signonui = new SignonUiAdaptor(SIGNON_UI_SERVICE,
                                      SIGNON_UI_DAEMON_OBJECTPATH,
                                      QDBusConnection::sessionBus());
-
+#endif
 
     connect(CredentialsAccessManager::instance(),
             SIGNAL(credentialsSystemReady()),
@@ -309,13 +333,23 @@ void SignonSessionCore::setId(quint32 id)
 
 void SignonSessionCore::startProcess()
 {
-
     TRACE() << "the number of requests is" << m_listOfRequests.length();
 
     m_requestIsActive = true;
     RequestData data = m_listOfRequests.head();
     QVariantMap parameters = data.m_params;
 
+#ifdef ENABLE_P2P
+    /* inject the in-process signon ui bus address */
+    pid_t clientPid = AccessControlManagerHelper::pidOfPeer(data.m_peerContext);
+    parameters.insert(
+            QStringLiteral("InProcessBusAddress"),
+            QStringLiteral("unix:path=%1/signonui/%2-socket")
+                      .arg(QStandardPaths::writableLocation(
+                                QStandardPaths::RuntimeLocation))
+                      .arg(clientPid));
+#endif
+
     /* save the client data; this should not be modified during the processing
      * of this request */
     m_clientData = parameters;
diff --git a/src/signond/signonsessioncore.h b/src/signond/signonsessioncore.h
index 6d26b24..48a2f4d 100644
--- a/src/signond/signonsessioncore.h
+++ b/src/signond/signonsessioncore.h
@@ -132,6 +132,7 @@ private:
 private:
     PluginProxy *m_plugin;
     QQueue<RequestData> m_listOfRequests;
+    QDBusConnection m_p2pc;
     SignonUiAdaptor *m_signonui;
 
     QDBusPendingCallWatcher *m_watcher;
